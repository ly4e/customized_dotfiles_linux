## Configuration for Alacritty, the GPU enhanced terminal emulator.
### Baseline Pulled from: https://raw.githubusercontent.com/alacritty/alacritty/master/alacritty.yml
#
### All imports must either be absolute paths starting with `/`, or paths relative to the user's home directory starting with `~/`.
#import:
#  - /path/to/alacritty.yml

# Font configuration
font:
  # Point size
  size: 14.0

colors:
  name: GJM
  author: ""
  primary:
    background: "#1c1c1c"
    foreground: "#c5c5c5"
  cursor:
    text: "#1c1c1c"
    cursor: "#c5c5c5"
  normal:
    black: "#1c1c1c"
    red: "#ff005b"
    green: "#7b880e"
    yellow: "#ffe755"
    blue: "#048ac7"
    magenta: "#833c9f"
    cyan: "#0ac1cd"
    white: "#e5e5e5"
  bright:
    black: "#666666"
    red: "#ff00a0"
    green: "#d7e846"
    yellow: "#ff9f00"
    blue: "#48c6ff"
    magenta: "#be67e1"
    cyan: "#63e7f0"
    white: "#f3f3f3"

# The bell is rung every time the BEL control character is received.
bell:
# Visual Bell Animation --- Animation effect for flashing the screen when the visual bell is rung.
# Values for `animation`:
  #   - Ease
  #   - EaseOut
  #   - EaseOutSine
  #   - EaseOutQuad
  #   - EaseOutCubic
  #   - EaseOutQuart
  #   - EaseOutQuint
  #   - EaseOutExpo
  #   - EaseOutCirc
  #   - Linear
  animation: EaseOutExpo
  
  # Duration of the visual bell flash in milliseconds. A `duration` of `0` will disable the visual bell animation.
  duration: 5
  
  # Visual bell animation color.
  color: '#ffffff'

### Bell Command
  # This program is executed whenever the bell is rung. When set to `command: None`, no command will be executed.
  #
  # Example:
  #   command:
  #     program: notify-send
  #     args: ["Hello, World!"]
  #
  command: None
 
   
### Background opacity
  # Window opacity as a floating point number from `0.0` to `1.0`. The value `0.0` is completely transparent and `1.0` is opaque.
background_opacity: 1.0
  

#selection:
  # This string contains all characters that are used as separators for "semantic words" in Alacritty.
  #semantic_escape_chars: ",│`|:\"' ()[]{}<>\t"
  # When set to `true`, selected text will be copied to the primary clipboard.
  #save_to_clipboard: false
  #cursor:
  #style:
  # Cursor shape
  # Values for `shape`:
  #   - ▇ Block
  #   - _ Underline
  #   - | Beam
  #shape: Block
  # Cursor blinking state
  # Values for `blinking`:
  #   - Never: Prevent the cursor from ever blinking
  #   - Off: Disable blinking by default
  #   - On: Enable blinking by default
  #   - Always: Force the cursor to always blink
  #blinking: Off

## Live config reload (changes require restart)
live_config_reload: true


# Shell
# You can set `shell.program` to the path of your favorite shell, e.g. `/bin/fish`. Entries in `shell.args` are passed unmodified as arguments to the shell.
# Default:
#   - (macOS) /bin/bash --login
#   - (Linux/BSD) user login shell
#   - (Windows) powershell
#shell:
#  program: /bin/bash
#  args:
#    - --login

# Startup directory
# Directory the shell is started in. If this is unset, or `None`, the working directory of the parent process will be used.
#working_directory: None


#    A `~` operator can be used before a mode to apply the binding whenever the mode is *not* active, e.g. `~Alt`.
# Bindings are always filled by default, but will be replaced when a new binding with the same triggers is defined. To unset a default binding, it can
# be mapped to the `ReceiveChar` action. Alternatively, you can use `None` for a no-op if you do not wish to receive input characters for that binding.
#
# If the same trigger is assigned to multiple actions, all of them are executed in the order they were defined in.
#key_bindings:
#- { key: Paste,                                       action: Paste          }
#- { key: Copy,                                        action: Copy           }
#- { key: L,         mods: Control,                    action: ClearLogNotice }
#- { key: L,         mods: Control, mode: ~Vi|~Search, chars: "\x0c"          }
#- { key: PageUp,    mods: Shift,   mode: ~Alt,        action: ScrollPageUp,  }
#- { key: PageDown,  mods: Shift,   mode: ~Alt,        action: ScrollPageDown }
#- { key: Home,      mods: Shift,   mode: ~Alt,        action: ScrollToTop,   }
#- { key: End,       mods: Shift,   mode: ~Alt,        action: ScrollToBottom }
# Vi Mode
#- { key: Space,  mods: Shift|Control, mode: Vi|~Search, action: ScrollToBottom          }
#- { key: Space,  mods: Shift|Control, mode: ~Search,    action: ToggleViMode            }
#- { key: Escape,                      mode: Vi|~Search, action: ClearSelection          }
#- { key: I,                           mode: Vi|~Search, action: ScrollToBottom          }
#- { key: I,                           mode: Vi|~Search, action: ToggleViMode            }
#- { key: C,      mods: Control,       mode: Vi|~Search, action: ToggleViMode            }
#- { key: Y,      mods: Control,       mode: Vi|~Search, action: ScrollLineUp            }
#- { key: E,      mods: Control,       mode: Vi|~Search, action: ScrollLineDown          }
#- { key: G,                           mode: Vi|~Search, action: ScrollToTop             }
#- { key: G,      mods: Shift,         mode: Vi|~Search, action: ScrollToBottom          }
#- { key: B,      mods: Control,       mode: Vi|~Search, action: ScrollPageUp            }
#- { key: F,      mods: Control,       mode: Vi|~Search, action: ScrollPageDown          }
#- { key: U,      mods: Control,       mode: Vi|~Search, action: ScrollHalfPageUp        }
#- { key: D,      mods: Control,       mode: Vi|~Search, action: ScrollHalfPageDown      }
#- { key: Y,                           mode: Vi|~Search, action: Copy                    }
#- { key: Y,                           mode: Vi|~Search, action: ClearSelection          }
#- { key: Copy,                        mode: Vi|~Search, action: ClearSelection          }
#- { key: V,                           mode: Vi|~Search, action: ToggleNormalSelection   }
#- { key: V,      mods: Shift,         mode: Vi|~Search, action: ToggleLineSelection     }
#- { key: V,      mods: Control,       mode: Vi|~Search, action: ToggleBlockSelection    }
#- { key: V,      mods: Alt,           mode: Vi|~Search, action: ToggleSemanticSelection }
#- { key: Return,                      mode: Vi|~Search, action: Open                    }
#- { key: K,                           mode: Vi|~Search, action: Up                      }
#- { key: J,                           mode: Vi|~Search, action: Down                    }
#- { key: H,                           mode: Vi|~Search, action: Left                    }
#- { key: L,                           mode: Vi|~Search, action: Right                   }
#- { key: Up,                          mode: Vi|~Search, action: Up                      }
#- { key: Down,                        mode: Vi|~Search, action: Down                    }
#- { key: Left,                        mode: Vi|~Search, action: Left                    }
#- { key: Right,                       mode: Vi|~Search, action: Right                   }
#- { key: Key0,                        mode: Vi|~Search, action: First                   }
#- { key: Key4,   mods: Shift,         mode: Vi|~Search, action: Last                    }
#- { key: Key6,   mods: Shift,         mode: Vi|~Search, action: FirstOccupied           }
#- { key: H,      mods: Shift,         mode: Vi|~Search, action: High                    }
#- { key: M,      mods: Shift,         mode: Vi|~Search, action: Middle                  }
#- { key: L,      mods: Shift,         mode: Vi|~Search, action: Low                     }
#- { key: B,                           mode: Vi|~Search, action: SemanticLeft            }
#- { key: W,                           mode: Vi|~Search, action: SemanticRight           }
#- { key: E,                           mode: Vi|~Search, action: SemanticRightEnd        }
#- { key: B,      mods: Shift,         mode: Vi|~Search, action: WordLeft                }
#- { key: W,      mods: Shift,         mode: Vi|~Search, action: WordRight               }
#- { key: E,      mods: Shift,         mode: Vi|~Search, action: WordRightEnd            }
#- { key: Key5,   mods: Shift,         mode: Vi|~Search, action: Bracket                 }
#- { key: Slash,                       mode: Vi|~Search, action: SearchForward           }
#- { key: Slash,  mods: Shift,         mode: Vi|~Search, action: SearchBackward          }
#- { key: N,                           mode: Vi|~Search, action: SearchNext              }
#- { key: N,      mods: Shift,         mode: Vi|~Search, action: SearchPrevious          }
# Search Mode
#- { key: Return,                mode: Search|Vi,  action: SearchConfirm         }
#- { key: Escape,                mode: Search,     action: SearchCancel          }
#- { key: C,      mods: Control, mode: Search,     action: SearchCancel          }
#- { key: U,      mods: Control, mode: Search,     action: SearchClear           }
#- { key: W,      mods: Control, mode: Search,     action: SearchDeleteWord      }
#- { key: P,      mods: Control, mode: Search,     action: SearchHistoryPrevious }
#- { key: N,      mods: Control, mode: Search,     action: SearchHistoryNext     }
#- { key: Up,                    mode: Search,     action: SearchHistoryPrevious }
#- { key: Down,                  mode: Search,     action: SearchHistoryNext     }
#- { key: Return,                mode: Search|~Vi, action: SearchFocusNext       }
#- { key: Return, mods: Shift,   mode: Search|~Vi, action: SearchFocusPrevious   }
# (Windows, Linux, and BSD only)
#- { key: V,              mods: Control|Shift, mode: ~Vi,        action: Paste            }
#- { key: C,              mods: Control|Shift,                   action: Copy             }
#- { key: F,              mods: Control|Shift, mode: ~Search,    action: SearchForward    }
#- { key: B,              mods: Control|Shift, mode: ~Search,    action: SearchBackward   }
#- { key: C,              mods: Control|Shift, mode: Vi|~Search, action: ClearSelection   }
#- { key: Insert,         mods: Shift,                           action: PasteSelection   }
#- { key: Key0,           mods: Control,                         action: ResetFontSize    }
#- { key: Equals,         mods: Control,                         action: IncreaseFontSize }
#- { key: Plus,           mods: Control,                         action: IncreaseFontSize }
#- { key: NumpadAdd,      mods: Control,                         action: IncreaseFontSize }
#- { key: Minus,          mods: Control,                         action: DecreaseFontSize }
#- { key: NumpadSubtract, mods: Control,                         action: DecreaseFontSize }
# (Windows only)
#- { key: Return,   mods: Alt,           action: ToggleFullscreen }
# (macOS only)
#- { key: K,              mods: Command, mode: ~Vi|~Search, chars: "\x0c"            }
#- { key: K,              mods: Command, mode: ~Vi|~Search, action: ClearHistory     }
#- { key: Key0,           mods: Command,                    action: ResetFontSize    }
#- { key: Equals,         mods: Command,                    action: IncreaseFontSize }
#- { key: Plus,           mods: Command,                    action: IncreaseFontSize }
#- { key: NumpadAdd,      mods: Command,                    action: IncreaseFontSize }
#- { key: Minus,          mods: Command,                    action: DecreaseFontSize }
#- { key: NumpadSubtract, mods: Command,                    action: DecreaseFontSize }
#- { key: V,              mods: Command,                    action: Paste            }
#- { key: C,              mods: Command,                    action: Copy             }
#- { key: C,              mods: Command, mode: Vi|~Search,  action: ClearSelection   }
#- { key: H,              mods: Command,                    action: Hide             }
#- { key: M,              mods: Command,                    action: Minimize         }
#- { key: Q,              mods: Command,                    action: Quit             }
#- { key: W,              mods: Command,                    action: Quit             }
#- { key: N,              mods: Command,                    action: SpawnNewInstance }
#- { key: F,              mods: Command|Control,            action: ToggleFullscreen }
#- { key: F,              mods: Command, mode: ~Search,     action: SearchForward    }
#- { key: B,              mods: Command, mode: ~Search,     action: SearchBackward   }


